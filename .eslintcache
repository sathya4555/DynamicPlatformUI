[{"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\index.js":"1","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\App.js":"2","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Nav.js":"3","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Formdata.js":"4","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\FormContext.js":"5","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Element.js":"6","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\elements\\Input.js":"7","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\elements\\Checkbox.js":"8","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\elements\\Select.js":"9","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\dashboard.js":"10","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Side.js":"11","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Signup.js":"12","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Userpool.js":"13","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\login.js":"14","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Account.js":"15","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Status.js":"16","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\TenantLogin.js":"17"},{"size":199,"mtime":1631012680549,"results":"18","hashOfConfig":"19"},{"size":2854,"mtime":1631815814004,"results":"20","hashOfConfig":"19"},{"size":1681,"mtime":1631815786021,"results":"21","hashOfConfig":"19"},{"size":18611,"mtime":1631705789823,"results":"22","hashOfConfig":"19"},{"size":86,"mtime":1631012908873,"results":"23","hashOfConfig":"19"},{"size":1088,"mtime":1631273095846,"results":"24","hashOfConfig":"19"},{"size":820,"mtime":1631013446665,"results":"25","hashOfConfig":"19"},{"size":591,"mtime":1631012680664,"results":"26","hashOfConfig":"19"},{"size":802,"mtime":1631012680747,"results":"27","hashOfConfig":"19"},{"size":718,"mtime":1631176664378,"results":"28","hashOfConfig":"19"},{"size":1063,"mtime":1631176525290,"results":"29","hashOfConfig":"19"},{"size":941,"mtime":1631258905522,"results":"30","hashOfConfig":"19"},{"size":222,"mtime":1631259368794,"results":"31","hashOfConfig":"19"},{"size":3002,"mtime":1631858122224,"results":"32","hashOfConfig":"19"},{"size":1607,"mtime":1631261028829,"results":"33","hashOfConfig":"19"},{"size":1991,"mtime":1631694755383,"results":"34","hashOfConfig":"19"},{"size":1303,"mtime":1631860735821,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"jnk7b3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\index.js",[],["78","79"],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\App.js",["80","81","82","83","84","85","86","87","88","89"],"import { useState, useEffect } from 'react';\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport  io  from 'socket.io-client';\nimport FormData from './components/Formdata';\nimport { Nav } from './components/Nav';\n// import formJSON from '../components/Json/formElement.json';\nimport app_json from './components/Json/app_json.json'\nimport rolejsonimport from './components/Json/roles_json.json'\nimport Dashboard from './components/dashboard';\nimport Signup from './components/Signup';\nimport Login from './components/login';\nimport { Account } from './components/Account';\nimport Status from './components/Status';\n// import TenantList from './components/TenantList';\nimport { TenantLogin } from './components/TenantLogin';\n\n\nlet socket = io.connect('https://localhost:4000');\n\n\n function App() {\n  useEffect(() => {\n    console.log('inside cons of websockets');\n    let socket = io.connect('https://localhost:4000');\n    //FIRST ACTION hapens wheN the page opens firSt time , this is one time activity \n    socket.on('connection', function (socket) {\n      console.log('socket has been connected');\n      console.log(socket)\n    });\n  \n    //Thi seven Is caLled whEn  the server sends the data back to the client\n    socket.on('successResponseFromServer', function (data) {\n      //evalaute the requestGuid from the dictionary and then match and then show themessgae in console\n      console.log(data);\n      // alert(`requested completed and socket id is ${data.Status.statusMessage.message}`)\n      if(`${data.Status.statusMessage.message}` === 'undefined')\n           alert(`requested completed and socket id is ${data.SocketId}`)\n      else\n          alert(`${data.Status.statusMessage.message}`)\n      //for find you can use 'Filter' \n      //remove the item from the dictionary /array\n    });\n  \n      //this is the event which is called when the server register the socket id and sends back the socket id\n      socket.on('socketIdFromServer', function (data) {\n        console.log(data)\n        sessionStorage.setItem('socket_id', data.socket_id);\n      });\n  }, [])\n  const [setjSON, setsetjSON] = useState('')\n  const [rolejson, setrolejson] = useState('')\n  const [flag, setflag] = useState(0)\nconst setappjson = (e)=>{\n  e.preventDefault();\n  setsetjSON(app_json[0])\n    console.log(setjSON);\n    setflag(1)\n}\n\nconst setrolejsonfunction = (e)=>{\n  e.preventDefault();\n  setsetjSON(rolejsonimport[0])\n    console.log(rolejsonimport[0]);\n    setflag(1)\n\n}\n\n  return (\n<div>\n<BrowserRouter>\n  <Nav/>\n    <Account>\n      <Status/>\n    <Route exact path=\"/signup\" component={() =>  <Signup/>}/>\n    <Route exact path=\"/login\" component={() =>  <Login/>}/>\n    <Route exact path=\"/tenant\" component={() =>  <TenantLogin/>}/>\n\n    </Account>\n\n  </BrowserRouter>\n{/* <FormData/> */}\n</div>\n   \n  );\n  }\n\n\nexport default App;\n","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Nav.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Formdata.js",["90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"\r\nimport formJSON from '../components/Json/formElement.json';\r\nimport app_json from '../components/Json/app_json.json'\r\nimport { useState, useEffect } from 'react';\r\nimport Element from '../components/Element';\r\nimport { FormContext } from '../FormContext';\r\nimport io from 'socket.io-client';\r\nimport Table from 'react-bootstrap/Table'\r\n// import dashboardcss from './'\r\n\r\nfunction FormData(props) {\r\n    const [Id, setId] = useState(null);\r\n    const [RowVersion, setRowVersion] = useState(null);\r\n    const [CreationDate, setCreationDate] = useState(null);\r\n    const [ModifiedDate, setModifiedDate] = useState(null);\r\n    const [CreatedBy, setCreatedBy] = useState(null);\r\n    const [ModifiedBy, setModifiedBy] = useState(null);\r\n    const [app_name, setapp_name] = useState(null);\r\n    const [app_description, setapp_description] = useState(null)\r\n    const [elements, setElements] = useState(null);\r\n    const [rolename, setrolename] = useState(null)\r\n    const [role_privilage, setrole_privilage] = useState(null)\r\n    // const [data, setdata] = useState(null)\r\n    const [methodName, setmethodName] = useState(null)\r\n    const [getURL, setgetURL] = useState(null)\r\n    const [flag, setflag] = useState(0)\r\n    const [hh, sethh] = useState('')\r\n    var token = localStorage.getItem(\"token\");\r\n    // const [data1, setdata1] = useState([\"\"])\r\n    let i =2\r\n    //   const [service, setservice] = useState(null)\r\n    //   const [queue, setqueue] = useState(null)\r\n    const [arr, setarr] = useState([\"\"])\r\n    // let DataCollection =[]\r\n    // const [DataCollection, setDataCollection] = useState(null)\r\n    useEffect(() => {\r\n        //  setElements(props.setjSON)\r\n         console.log(props.setjSON);\r\n        //  props.setjSON.tabledata.map((row) =>{\r\n        //      arr.push(row.rowname)\r\n                \r\n\r\n        //  })\r\n        setgetURL(props.setjSON.geturl)\r\n        console.log(\"geturlin useeffect\",getURL);\r\n        // console.log(\"useeffect1\", page_label);\r\n        // console.log(\"service\", service);\r\n        // console.log(\"queue\", queue);\r\n        // console.log(\"method\",method);\r\n        console.log(\"arr test \",arr[1]);\r\n    }, [])\r\n\r\n    const [APPS, setAPPS] = useState([\"\"])\r\nconst [tablerowdata,settablerowdata] = useState([\"\"])\r\nuseEffect(() => {\r\n    // setElements(props.setjSON)\r\n    // console.log(\"useeffect1\", page_label);\r\n    // console.log(\"service\", service);\r\n    // console.log(\"queue\", queue);\r\n    // console.log(\"method\",method.add);\r\n    // console.log(\"DataCollection11111\",DataCollection11);\r\n    //  props.setjSON.DataCollection11.map((row)=>{\r\n    //        console.log(\"drfet\",row.CreationDate) \r\n    //      //settablerowdata(row.rowname)\r\n    //     // console.log(tablerowdata);\r\n    //  });\r\n  async function GETaPPS() {\r\n  try {\r\n    //   const reqUrl = `http://localhost:4001/${getURL}/`\r\n    const reqUrl = `http://localhost:4001/apps/`\r\n      const response1 = await fetch(reqUrl)\r\n      const resJSON = await response1.json()\r\n      console.log(resJSON);\r\n      setAPPS(resJSON)\r\n    \r\n  } catch(error) {\r\nconsole.log('inside get apps catch',error);\r\nsetflag(1)\r\n  }}\r\n  GETaPPS()\r\n}, [])\r\n\r\n    const getdata = () =>{\r\n        // setElements(app_json[0])\r\n        setElements(props.setjSON)\r\n        console.log(\"useeffect1\", page_label);\r\n        console.log(\"service\", service);\r\n        console.log(\"queue\", queue);\r\n        console.log(\"method\",method.add);\r\n    }\r\n\r\n    const { fields, page_label, service, queue,method ,geturl,DataCollection} = elements ?? {}\r\n    var SocketId = sessionStorage.getItem('socket_id')\r\n    let request_guid = uuidv4();\r\n    function uuidv4() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });}\r\n let data=null;\r\n let data1=null\r\n let url=null\r\n const handleChange = (id, event) => {\r\n    event.preventDefault();\r\n    const newElements = { ...elements }\r\n    //  console.log(\"id== \",id)\r\n    newElements.fields.forEach(field => {\r\n        const { field_type, field_id } = field;\r\n        setId(id)\r\n        if (id === field_id) {\r\n            switch (field_type) {\r\n                case 'checkbox':\r\n                    field['field_value'] = event.target.checked;\r\n                    break;\r\n\r\n                default:\r\n                    field['field_value'] = event.target.value;\r\n                    break;\r\n            }\r\n\r\n       \r\n\r\n            elements.fields.map((row) => {\r\n                // console.log(row.field_value);\r\n                if (row.field_id == \"Id\") {\r\n                    // setId(row.field_value)\r\n                    //   console.log(\"inside if\",app_name);\r\n                    // DataCollection[0].Id=id\r\n                    console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                 //    console.log(\"value is\",DataCollection[0]);\r\n                     const obj = JSON.stringify(DataCollection)\r\n                    console.log(\"value is\",obj);\r\n                         sethh(JSON.parse(obj)) \r\n                    console.log(\"value is hh\",hh);\r\n                }\r\n                if (row.field_id == \"CreatedBy\") {\r\n                    DataCollection[0].Id=idnew\r\n                    let ss=row.field_id\r\n                    DataCollection[0].CreatedBy=row.field_value\r\n                       console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                    //    console.log(\"value is\",DataCollection[0]);\r\n                        const obj = JSON.stringify(DataCollection)\r\n                       console.log(\"value is\",obj);\r\n                        sethh(JSON.parse(obj)) \r\n                       console.log(\"value is hh\",hh);\r\n                   \r\n                }\r\n                if (row.field_id == \"ModifiedBy\") {\r\n                    setModifiedBy(row.field_value)\r\n                    //   console.log(\"inside if\",ModifiedBy);\r\n                      DataCollection[0].ModifiedBy=row.field_value\r\n                       console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                    //    console.log(\"value is\",DataCollection[0]);\r\n                        const obj = JSON.stringify(DataCollection)\r\n                       console.log(\"value is\",obj);\r\n                       sethh(JSON.parse(obj)) \r\n                       console.log(\"value is hh\",hh);\r\n                }\r\n                if (row.field_id == \"RowVersion\") {\r\n                    setRowVersion(row.field_value)\r\n                    //    console.log(\"inside if\",RowVersion);\r\n                    DataCollection[0].RowVersion=row.field_value\r\n                    console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                 //    console.log(\"value is\",DataCollection[0]);\r\n                     const obj = JSON.stringify(DataCollection)\r\n                    console.log(\"value is\",obj);\r\n                         sethh(JSON.parse(obj)) \r\n                    console.log(\"value is hh\",hh);\r\n                }\r\n                if (row.field_id == \"app_name\") {\r\n                    setapp_name(row.field_value)\r\n                    //   console.log(\"inside if\",app_name);\r\n                    DataCollection[0].app_name=row.field_value\r\n                    console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                 //    console.log(\"value is\",DataCollection[0]);\r\n                     const obj = JSON.stringify(DataCollection)\r\n                    console.log(\"value is\",obj);\r\n                         sethh(JSON.parse(obj)) \r\n                    console.log(\"value is hh\",hh);\r\n                }\r\n                if (row.field_id == \"app_description\") {\r\n                    setapp_description(row.field_value)\r\n                    //  console.log(\"inside if\",app_description);\r\n                    DataCollection[0].app_description=row.field_value\r\n                    console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                 //    console.log(\"value is\",DataCollection[0]);\r\n                     const obj = JSON.stringify(DataCollection)\r\n                    console.log(\"value is\",obj);\r\n                         sethh(JSON.parse(obj)) \r\n                    console.log(\"value is hh\",hh);\r\n                }\r\n                if (row.field_id == \"role_name\") {\r\n                    setrolename(row.field_value)\r\n                     console.log(\"inside if\",app_description);\r\n                }\r\n                if (row.field_id == \"role_priviledge\") {\r\n                    setrole_privilage(row.field_value)\r\n                     console.log(\"inside if\",role_privilage);\r\n                }\r\n                // if (row.field_id == \"CreationDate\") {\r\n                    DataCollection[0].CreationDate=new Date().toLocaleString()\r\n                    console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                 //    console.log(\"value is\",DataCollection[0]);\r\n                     let obj = JSON.stringify(DataCollection)\r\n                    console.log(\"value is\",obj);\r\n                         sethh(JSON.parse(obj)) \r\n                    console.log(\"value is hh\",hh);\r\n                // }\r\n\r\n                // if (row.field_id == \"ModifiedDate\") {\r\n                    DataCollection[0].ModifiedDate=new Date().toLocaleString()\r\n                    console.log(\"inside if data collection\",DataCollection[row.field_id]);\r\n                 //    console.log(\"value is\",DataCollection[0]);\r\n                      obj = JSON.stringify(DataCollection)\r\n                    console.log(\"value is\",obj);\r\n                         sethh(JSON.parse(obj)) \r\n                    console.log(\"value is hh\",hh);\r\n                // }\r\n                setCreationDate(new Date().toLocaleString())\r\n                setModifiedDate(new Date().toLocaleString())\r\n            })\r\n        }\r\n        setElements(newElements)\r\n    });\r\n    console.log(elements)\r\n}\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        elements.fields.map((row) => {\r\n        })\r\n\r\n        if(methodName == 'POST'){\r\n            url=`https://localhost:4000/${service}/${queue}`\r\n            data=[\r\n                {\r\n                    \"RowVersion\": RowVersion,\r\n                    \"CreationDate\": CreationDate,\r\n                    \"ModifiedDate\": ModifiedDate,\r\n                    \"CreatedBy\": CreatedBy,\r\n                    \"ModifiedBy\": ModifiedBy,\r\n                    \"role_id\": null,\r\n                    \"app_name\": app_name,\r\n                    \"app_description\": app_description,\r\n                    \"role_name\": rolename,\r\n                    \"role_priviledge\": role_privilage\r\n                },\r\n            ]\r\n        }\r\n\r\n        if(methodName == 'PUT'){\r\n            url=`https://localhost:4000/${service}/${queue}/1`\r\n            console.log(\"arr inside put\",arr)\r\n            if(page_label === \"App\" ){\r\n                data1= {\r\n                    \"RowVersion\": RowVersion,\r\n                     // \"CreationDate\": CreationDate,\r\n                     \"ModifiedDate\": ModifiedDate,\r\n                     \"Id\": Id,\r\n                     \"CreatedBy\": CreatedBy,\r\n                     \"ModifiedBy\": ModifiedBy,\r\n                     \"app_name\": app_name,\r\n                     \"app_description\": app_description,\r\n                     // \"role_name\": rolename,\r\n                     // \"role_priviledge\": role_privilage\r\n                 }\r\n            }\r\n            if(page_label === \"Role\" ){\r\n                console.log(\"inside put role and pagellabel is\",page_label);\r\n                data1= {\r\n                    \"RowVersion\": RowVersion,\r\n                     // \"CreationDate\": CreationDate,\r\n                     \"ModifiedDate\": ModifiedDate,\r\n                     \"Id\": Id,\r\n                     \"CreatedBy\": CreatedBy,\r\n                     \"ModifiedBy\": ModifiedBy,\r\n                    //  \"app_name\": app_name,\r\n                    //  \"app_description\": app_description,\r\n                     \"role_name\": rolename,\r\n                     \"role_priviledge\": role_privilage\r\n                 }\r\n            }\r\n            \r\n            data=[\r\n                data1\r\n            ]\r\n            console.log(\"Data data1\",data);\r\n\r\n        }\r\n\r\n        if(methodName == 'DELETE'){\r\n            url=`https://localhost:4000/${service}/${queue}/1`\r\n            data=[\r\n                {\r\n                    \"Id\": Id,\r\n                }\r\n            ]\r\n\r\n        }\r\n        console.log(\"data\",data);\r\n        console.log(\"url\",url)\r\n        console.log(\"methodname\",methodName);\r\n        // https://localhost:4000/APPS1_SERVICE/APPS1\r\n        const response = fetch(url, {\r\n            // const response = fetch('https://localhost:4000/APPS1_SERVICE/APPS1',{\r\n            method: methodName,\r\n            headers: { 'Content-Type': 'application/json','Token': token },\r\n            // credentials: 'include',\r\n            body: JSON.stringify({\r\n                \"DataCollection\": hh,\r\n                \"SocketId\": SocketId,\r\n                \"RequestGuid\": request_guid\r\n            })\r\n\r\n        }).then(response => response.json())\r\n            .then(json => console.log(json));\r\n\r\n\r\n    }\r\n    const [idnew, setidnew] = useState(\"\")\r\n    const editdata = async (e,id) => {\r\n        setElements(props.setjSON)\r\n        console.log(\"useeffect1\", page_label);\r\n        console.log(\"service\", service);\r\n        console.log(\"queue\", queue);\r\n        // console.log(\"method\",method.add);\r\n        console.log(\"geturl\",geturl);\r\n        setId(id)\r\n        setidnew(id)\r\n      console.log(\"id\",id);\r\n        setmethodName('PUT')\r\n        setModifiedDate(new Date().toLocaleString())\r\n        e.preventDefault();\r\n        //     // const adminname = props.name\r\n        //     let SocketId = sessionStorage.getItem('socket_id')\r\n        //     const response = await fetch(`https://localhost:4000/${service}/${queue}/1`, {\r\n        //       method: method.update,\r\n        //       headers: { 'Content-Type': 'application/json' },\r\n        //       //credentials: 'include',\r\n        //       body: JSON.stringify({\r\n        //       \"DataCollection\": [\r\n        //         {\r\n        //            \"RowVersion\": RowVersion,\r\n        //             \"CreationDate\": CreationDate,\r\n        //             \"ModifiedDate\": ModifiedDate,\r\n        //             \"Id\": 10,\r\n        //             \"CreatedBy\": CreatedBy,\r\n        //             \"ModifiedBy\": ModifiedBy,\r\n        //             \"app_name\": app_name,\r\n        //             \"app_description\": app_description,\r\n        //             \"role_name\": rolename,\r\n        //             \"role_priviledge\": role_privilage\r\n        //         }\r\n        //     ],\r\n        //       \"SocketId\": SocketId,\r\n        //       \"RequestGuid\": request_guid\r\n        \r\n        //       })\r\n        //     });\r\n          }\r\n\r\n          const deletedata = async (e,id) => {\r\n            setElements(props.setjSON)\r\n            console.log(\"useeffect1\", page_label);\r\n            console.log(\"service\", service);\r\n            console.log(\"queue\", queue);\r\n            // console.log(\"method\",method.delete);\r\n            console.log(\"geturl\",geturl);\r\n            setId(id)\r\n            console.log(\"id\",id);\r\n            setmethodName('DELETE')\r\n            setModifiedDate(new Date().toLocaleString())\r\n            e.preventDefault();\r\n          }\r\nconst [addflag, setaddflag] = useState(0)\r\n          const  adddata =() =>{\r\n\r\nsetCreationDate(new Date().toLocaleString())\r\n\r\nsetaddflag(1)\r\n            setmethodName('POST')\r\n            setElements(props.setjSON)\r\n            console.log(\"useeffect1\", page_label);\r\n            console.log(\"service\", service);\r\n            console.log(\"queue\", queue);\r\n            console.log(\"method\",method.add);\r\n          }\r\n  \r\n    const fieldChanged = (fieldId, value) => {\r\n        // setValues(currentValues => {\r\n        //     currentValues[fieldId] = value;\r\n        //     return currentValues;\r\n        // });\r\n        console.log(\"inside fireld changes\",value);\r\n    }\r\n    let h1=JSON.stringify(DataCollection)\r\n    return (\r\n        <FormContext.Provider value={{ handleChange }}>\r\n            <div className=\"App container\">\r\n                <h3>{page_label}</h3>\r\n                {(addflag === 1 ?     <form>\r\n                    <button></button>\r\n                    {fields ? fields.map((field, i) => <Element key={i} field={field} onChange={e => fieldChanged(field.field_id, e.target.value)}/>) : null}\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={(e) => handleSubmit(e)}>Submit</button>\r\n                </form>: \"\")}\r\n            \r\n                {/* <button type=\"button\" onClick={()=>getdata()}  className=\"btn btn-danger\">getData</button> */}\r\n                <button type=\"button\" onClick={(e) => adddata(e)}  className=\"btn btn-danger\">Add Data</button>\r\n                \r\n            </div>\r\n            <Table striped bordered hover >\r\n               <tr>\r\n                   <th>Id</th>\r\n               { props.setjSON &&  props.setjSON.tabledata.map((field) => \r\n               <th> {field.rowname}</th>\r\n               ) }\r\n               </tr>\r\n               <tbody>\r\n               {(flag === 0 ?  APPS.map((row) =>\r\n            \r\n            <tr>\r\n                  {/* <td>{row.arr[i]}</td> */}\r\n                {/* <td>\r\n                   {row.i} \r\n                    </td> */}\r\n \r\n              {/* { props.setjSON &&  props.setjSON.tabledata.map((field) => \r\n             <td> {roDataCollection[0].Id}</td>\r\n             ) \r\n             } */}\r\n\r\n              <td>{row.Id}</td>\r\n              <td>{row.CreationDate}</td>\r\n              <td>{row.ModifiedDate}</td>\r\n              <td>{row.ModifiedBy}</td>\r\n              <td>{row.CreatedBy}</td>\r\n              <td>{row.RowVersion}</td>\r\n              <td>{row.app_name}</td>\r\n              <td>{row.app_description}</td>\r\n            <td><button type=\"button\" onClick={(e) => editdata(e,row.Id)}  className=\"btn btn-danger\">Edit </button></td>\r\n            <td><button type=\"button\" onClick={(e) => deletedata(e,row.Id)}  className=\"btn btn-danger\">Delete </button></td>\r\n            </tr>\r\n          ): \"\")}   \r\n           \r\n           { props.setjSON.fields.map((row)=>{\r\n                <td>{row.field_id}</td>\r\n        //  console.log(row.field_id) \r\n     })}\r\n          </tbody>\r\n\r\n               </Table>\r\n        </FormContext.Provider>\r\n    );\r\n}\r\n\r\nexport default FormData;\r\n","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\FormContext.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Element.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\elements\\Input.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\elements\\Checkbox.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\elements\\Select.js",[],["120","121"],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\dashboard.js",["122","123","124"],"import React from \"react\";\r\nimport {Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router\";\r\nimport Sidebar from \"./Side\";\r\nimport './dashboard.css'\r\n\r\nconst Dash = props => {\r\n   \r\n\r\n    return (\r\n        <>\r\n         <Container fluid>\r\n                <Row>\r\n                    <Col xs={2} id=\"sidebar-wrapper\">      \r\n                      <Sidebar />\r\n                    </Col>\r\n                    <Col  xs={10} id=\"page-content-wrapper\">\r\n                        this is a test\r\n                    </Col> \r\n                </Row>\r\n\r\n            </Container>\r\n        </>\r\n        );\r\n  };\r\n  const Dashboard = withRouter(Dash);\r\n  export default Dashboard","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Side.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Signup.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Userpool.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\login.js",["125","126","127","128","129","130"],"import React, { useState, useContext } from \"react\";\r\nimport { AccountContext } from \"./Account\";\r\nimport {Redirect} from 'react-router-dom';\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const { authenticate } = useContext(AccountContext);\r\nconst [status, setstatus] = useState(false)\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    authenticate(email, password)\r\n      .then((data) => {\r\n        console.log(\"Logged in!\", data);\r\n        return  <Redirect  to=\"/app\" />\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Failed to login\", err);\r\n      });\r\n    var SocketId = sessionStorage.getItem('socket_id')\r\n    let request_guid = uuidv4();\r\n    function uuidv4() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });}\r\n    const response = fetch(`http://localhost:4001/auth/login`, {\r\n      // const response = fetch('https://localhost:4000/APPS1_SERVICE/LOGIN',{\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n          \"name\": email,\r\n          \"password\": password,\r\n              \"SocketId\": SocketId,\r\n                \"RequestGuid\": request_guid\r\n          // \"RequestGuid\": request_guid\r\n      })\r\n\r\n  }).then(response => response.json())\r\n  .then(json => sessionStorage.setItem(\"token\", json.accessToken.jwtToken));\r\n\r\n  // .then(json => sessionStorage.setItem(\"token\", json.accessToken.jwtToken)),\r\n      \r\n\r\n// set\r\n  };\r\n\r\n  return (\r\n    <div>\r\n       <form onSubmit={onSubmit}>\r\n        {/* <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          value={email}\r\n          onChange={(event) => setEmail(event.target.value)}\r\n        ></input>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        ></input>\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>   */}\r\n\r\n\r\n    \r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputEmail1\">Email address</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  value={email}\r\n          onChange={(event) => setEmail(event.target.value)} placeholder=\"Enter email\"/>\r\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"exampleInputPassword1\">Password</label>\r\n    <input type=\"password\"  value={password}\r\n          onChange={(event) => setPassword(event.target.value)} class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Account.js",[],"D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\Status.js",["131","132","133","134","135","136"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { AccountContext } from \"./Account\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { Nav } from './Nav';\r\nimport app_json from './Json/app_json.json'\r\nimport rolejsonimport from './Json/roles_json.json'\r\nimport FormData from './Formdata';\r\n\r\nconst Status = () => {\r\n  const [status, setStatus] = useState(false);\r\n\r\n  const { getSession, logout } = useContext(AccountContext);\r\n\r\n  useEffect(() => {\r\n    getSession().then((session) => {\r\n      console.log(\"Session: \", session);\r\n      setStatus(true);\r\n    });\r\n  }, []);\r\n\r\n  const [setjSON, setsetjSON] = useState('')\r\n  const [rolejson, setrolejson] = useState('')\r\n  const [flag, setflag] = useState(0)\r\nconst setappjson = (e)=>{\r\n  e.preventDefault();\r\n  setsetjSON(app_json[0])\r\n    console.log(setjSON);\r\n    setflag(1)\r\n}\r\n\r\nconst setrolejsonfunction = (e)=>{\r\n  e.preventDefault();\r\n  setsetjSON(rolejsonimport[0])\r\n    console.log(rolejsonimport[0]);\r\n    setflag(1)\r\n\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ fontSize: \"24px\" }}>\r\n      {status ? \r\n      <BrowserRouter>\r\n      <button onClick={logout}>Logout</button>\r\n      <main className=\"form-signin\">\r\n      <button type=\"button\" onClick={(e) => setappjson(e)}  className=\"btn btn-danger\">setappjson</button>\r\n      <button type=\"button\" onClick={(e) => setrolejsonfunction(e)}  className=\"btn btn-danger\">setrolejson</button>\r\n  \r\n  \r\n        {/* <Link to=\"/admin/upload\">About</Link> */}\r\n        {/* <PrimarySearchAppBar /> */}\r\n  \r\n  {(flag === 1  ?  <Route exact path=\"/app\" component={() => <FormData  setjSON={setjSON}/>} />: \"\")}\r\n        {/* <Route exact path=\"/app\" component={() => <FormData  setjSON={setjSON}/>} /> */}\r\n        {/* <Route exact path=\"/login\" component={() => <Login  setName={setName} />} /> */}\r\n    \r\n      </main>\r\n      {/* <Dashboard/> */}\r\n    </BrowserRouter>\r\n      : \"Please login\"}\r\n    </div>\r\n  );\r\n};\r\nexport default Status;","D:\\Dynamic\\sanplerReactDynamic\\frontend\\src\\components\\TenantLogin.js",["137","138"],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nexport const TenantLogin = () => {\r\n\r\n    const [data, setData] = useState(null)\r\n    useEffect(() => {\r\n      console.log('inside hooks');\r\n      get()\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //   console.log(data);\r\n   \r\n    // }, [data])\r\n\r\n    async function get() {\r\n      try {\r\n      console.log('inside get method');\r\n\r\n        //   const reqUrl = `http://localhost:4001/${getURL}/`\r\n        const reqUrl = `http://localhost:4001/tenants`\r\n          const response1 = await fetch(reqUrl)\r\n          const resJSON = await response1.json()\r\n          console.log(\"Output data\",resJSON);\r\n          setData(resJSON)\r\n        setTimeout(()=>{\r\n          setData(resJSON)\r\n        },2000)\r\n     \r\n          alert(data)\r\n        \r\n      } catch(error) {\r\n    console.log('inside get apps catch',error);\r\n    // setflag(1)\r\n      }}\r\n    return (\r\n        <div>\r\n          <p>sathya</p>\r\n            {(data != null ? data.map((row) =>{\r\n            <button type=\"button\"  className=\"btn btn-danger\">{row.Id} </button>\r\n                \r\n            }): <button type=\"button\"  className=\"btn btn-danger\">ghdgf</button>)}\r\n\r\n{/* <button type=\"button\"  className=\"btn btn-danger\">fds </button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":25,"nodeType":"145","messageId":"146","endLine":2,"endColumn":29},{"ruleId":"143","severity":1,"message":"147","line":2,"column":38,"nodeType":"145","messageId":"146","endLine":2,"endColumn":44},{"ruleId":"143","severity":1,"message":"148","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":16},{"ruleId":"143","severity":1,"message":"149","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":17},{"ruleId":"143","severity":1,"message":"150","line":18,"column":5,"nodeType":"145","messageId":"146","endLine":18,"endColumn":11},{"ruleId":"143","severity":1,"message":"151","line":51,"column":10,"nodeType":"145","messageId":"146","endLine":51,"endColumn":18},{"ruleId":"143","severity":1,"message":"152","line":51,"column":20,"nodeType":"145","messageId":"146","endLine":51,"endColumn":31},{"ruleId":"143","severity":1,"message":"153","line":52,"column":10,"nodeType":"145","messageId":"146","endLine":52,"endColumn":14},{"ruleId":"143","severity":1,"message":"154","line":53,"column":7,"nodeType":"145","messageId":"146","endLine":53,"endColumn":17},{"ruleId":"143","severity":1,"message":"155","line":60,"column":7,"nodeType":"145","messageId":"146","endLine":60,"endColumn":26},{"ruleId":"143","severity":1,"message":"156","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"157","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"158","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":10},{"ruleId":"143","severity":1,"message":"159","line":16,"column":23,"nodeType":"145","messageId":"146","endLine":16,"endColumn":35},{"ruleId":"143","severity":1,"message":"160","line":30,"column":9,"nodeType":"145","messageId":"146","endLine":30,"endColumn":10},{"ruleId":"143","severity":1,"message":"161","line":33,"column":17,"nodeType":"145","messageId":"146","endLine":33,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":51,"column":8,"nodeType":"164","endLine":51,"endColumn":10,"suggestions":"165"},{"ruleId":"143","severity":1,"message":"166","line":54,"column":8,"nodeType":"145","messageId":"146","endLine":54,"endColumn":20},{"ruleId":"143","severity":1,"message":"167","line":54,"column":21,"nodeType":"145","messageId":"146","endLine":54,"endColumn":36},{"ruleId":"143","severity":1,"message":"168","line":83,"column":11,"nodeType":"145","messageId":"146","endLine":83,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":97,"column":51,"nodeType":"171","messageId":"172","endLine":97,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":97,"column":67,"nodeType":"171","messageId":"175","endLine":97,"endColumn":68},{"ruleId":"173","severity":1,"message":"174","line":97,"column":73,"nodeType":"171","messageId":"175","endLine":97,"endColumn":74},{"ruleId":"176","severity":1,"message":"177","line":123,"column":39,"nodeType":"178","messageId":"179","endLine":123,"endColumn":41},{"ruleId":"169","severity":1,"message":"170","line":125,"column":34,"nodeType":"171","messageId":"172","endLine":125,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":136,"column":34,"nodeType":"171","messageId":"172","endLine":136,"endColumn":36},{"ruleId":"143","severity":1,"message":"180","line":138,"column":25,"nodeType":"145","messageId":"146","endLine":138,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":148,"column":34,"nodeType":"171","messageId":"172","endLine":148,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":159,"column":34,"nodeType":"171","messageId":"172","endLine":159,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":170,"column":34,"nodeType":"171","messageId":"172","endLine":170,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":181,"column":34,"nodeType":"171","messageId":"172","endLine":181,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":192,"column":34,"nodeType":"171","messageId":"172","endLine":192,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":196,"column":34,"nodeType":"171","messageId":"172","endLine":196,"endColumn":36},{"ruleId":"176","severity":1,"message":"177","line":230,"column":35,"nodeType":"178","messageId":"179","endLine":230,"endColumn":37},{"ruleId":"169","severity":1,"message":"170","line":233,"column":23,"nodeType":"171","messageId":"172","endLine":233,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":251,"column":23,"nodeType":"171","messageId":"172","endLine":251,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":291,"column":23,"nodeType":"171","messageId":"172","endLine":291,"endColumn":25},{"ruleId":"143","severity":1,"message":"181","line":304,"column":15,"nodeType":"145","messageId":"146","endLine":304,"endColumn":23},{"ruleId":"143","severity":1,"message":"182","line":396,"column":9,"nodeType":"145","messageId":"146","endLine":396,"endColumn":11},{"ruleId":"176","severity":1,"message":"177","line":445,"column":44,"nodeType":"178","messageId":"179","endLine":445,"endColumn":46},{"ruleId":"139","replacedBy":"183"},{"ruleId":"141","replacedBy":"184"},{"ruleId":"143","severity":1,"message":"185","line":2,"column":30,"nodeType":"145","messageId":"146","endLine":2,"endColumn":34},{"ruleId":"143","severity":1,"message":"186","line":2,"column":36,"nodeType":"145","messageId":"146","endLine":2,"endColumn":40},{"ruleId":"143","severity":1,"message":"187","line":2,"column":42,"nodeType":"145","messageId":"146","endLine":2,"endColumn":48},{"ruleId":"143","severity":1,"message":"188","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":14},{"ruleId":"143","severity":1,"message":"189","line":9,"column":16,"nodeType":"145","messageId":"146","endLine":9,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":25,"column":51,"nodeType":"171","messageId":"172","endLine":25,"endColumn":53},{"ruleId":"173","severity":1,"message":"174","line":25,"column":67,"nodeType":"171","messageId":"175","endLine":25,"endColumn":68},{"ruleId":"173","severity":1,"message":"174","line":25,"column":73,"nodeType":"171","messageId":"175","endLine":25,"endColumn":74},{"ruleId":"143","severity":1,"message":"181","line":28,"column":11,"nodeType":"145","messageId":"146","endLine":28,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":3,"column":25,"nodeType":"145","messageId":"146","endLine":3,"endColumn":29},{"ruleId":"143","severity":1,"message":"147","line":3,"column":38,"nodeType":"145","messageId":"146","endLine":3,"endColumn":44},{"ruleId":"143","severity":1,"message":"190","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":13},{"ruleId":"162","severity":1,"message":"191","line":19,"column":6,"nodeType":"164","endLine":19,"endColumn":8,"suggestions":"192"},{"ruleId":"143","severity":1,"message":"151","line":22,"column":10,"nodeType":"145","messageId":"146","endLine":22,"endColumn":18},{"ruleId":"143","severity":1,"message":"152","line":22,"column":20,"nodeType":"145","messageId":"146","endLine":22,"endColumn":31},{"ruleId":"162","severity":1,"message":"193","line":9,"column":8,"nodeType":"164","endLine":9,"endColumn":10,"suggestions":"194"},{"ruleId":"176","severity":1,"message":"177","line":39,"column":45,"nodeType":"178","messageId":"179","endLine":39,"endColumn":47},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'FormData' is defined but never used.","'Dashboard' is defined but never used.","'socket' is assigned a value but never used.","'rolejson' is assigned a value but never used.","'setrolejson' is assigned a value but never used.","'flag' is assigned a value but never used.","'setappjson' is assigned a value but never used.","'setrolejsonfunction' is assigned a value but never used.","'formJSON' is defined but never used.","'app_json' is defined but never used.","'io' is defined but never used.","'setCreatedBy' is assigned a value but never used.","'i' is assigned a value but never used.","'setarr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'arr', 'getURL', and 'props.setjSON'. Either include them or remove the dependency array.","ArrayExpression",["197"],"'tablerowdata' is assigned a value but never used.","'settablerowdata' is assigned a value but never used.","'getdata' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ss' is assigned a value but never used.","'response' is assigned a value but never used.","'h1' is assigned a value but never used.",["195"],["196"],"'Card' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'status' is assigned a value but never used.","'setstatus' is assigned a value but never used.","'Nav' is defined but never used.","React Hook useEffect has a missing dependency: 'getSession'. Either include it or remove the dependency array.",["198"],"React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},"Update the dependencies array to be: [arr, getURL, props.setjSON]",{"range":"206","text":"207"},"Update the dependencies array to be: [getSession]",{"range":"208","text":"209"},"Update the dependencies array to be: [get]",{"range":"210","text":"211"},[2156,2158],"[arr, getURL, props.setjSON]",[625,627],"[getSession]",[234,236],"[get]"]